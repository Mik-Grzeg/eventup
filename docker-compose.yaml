version: "3.7"
name: event-up
volumes:
  redpanda-0: null
  postgres: null
  clickhouse: null
include:
  - ./docker/clickhouse/cluster_2s_2r/docker-compose.yaml
services:

  postgres-migrator:
    build:
      dockerfile: docker/Dockerfile.migrator
    container_name: postgres-migrator
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
    depends_on: 
      - postgres

  # Applications
  users-api:
    build:
      dockerfile: docker/Dockerfile
      target: users
      args: 
        DEBUG: debug
    environment:
      RUST_PG_URL: postgres://postgres:password@postgres:5432/postgres
      RUST_PG_MAX_CONN: 5
      RUST_SECRET_KEY: "secret-key"
    depends_on: 
      - postgres-migrator

    container_name: users-api
    ports: 
      - 9080:8080

  appointments-api:
    build:
      dockerfile: docker/Dockerfile
      target: appointments
      args:
        DEBUG: debug
    environment:
      RUST_PG_URL: postgres://postgres:password@postgres:5432/postgres
      RUST_PG_MAX_CONN: 5
      RUST_ACCESS_CONTROL_URL: "http://users-api:8080/api/v1/auth/access"
    depends_on: 
      - postgres-migrator
      - users-api

    container_name: appointments-api
    ports: 
      - 9081:8080


  # For OLTP workload
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  # Messaging BUS for asynchronous events
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with eachother internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      # The amount of memory to make available to Redpanda.
      - --memory 1G
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # enable logs for debugging.
      - --default-log-level=debug
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.14
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    profiles: ["log"]
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.3.1
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0
    profiles: ["log"]

