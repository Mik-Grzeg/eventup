openapi: "3.0.0"
info:
  title: User Management API
  version: 1.0.0
  servers:
    - url: http://localhost:8080
    - url: https://localhost:443
paths:
  /api/v1/users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - phone_number
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address (unique)
                password:
                  type: string
                  description: The user's password
                phone_number:
                  type: string
                  description: The user's phone number (unique)
                first_name:
                  type: string
                  description: The user's first name
                last_name:
                  type: string
                  description: The user's last name
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request
        '422':
          description: Unprocessable entity

  /api/v1/users/{user_id}:
    get:
      summary: Get user details by user ID
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '404':
          description: User not found

    put:
      summary: Update user details by user ID
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAccount"
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '404':
          description: User not found

    delete:
      summary: Delete user by user ID
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

  /api/v1/users/employees:
    get:
      summary: Get employee users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      required:
        - email
        - phone_number
      allOf:
        - $ref: "#/components/schemas/UserAccount"
        - properties:
            user_id:
              type: string
              format: uuid
              readOnly: true
              description: The unique identifier for a user
            email:
              type: string
              format: email
              description: The user's email address (unique)
            phone_number:
              type: string
              description: The user's phone number (unique)

    UserAccount:
      type: object
      properties:
        first_name:
          type: string
          description: The user's first name
        last_name:
          type: string
          description: The user's last name
